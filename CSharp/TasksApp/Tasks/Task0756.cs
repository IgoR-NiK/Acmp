using System;

namespace TasksApp.Tasks
{
	/// <summary>
	/// Задача 756 - "Рыболовная сеть"
	/// (Время: 1 сек. Память: 16 Мб Сложность: 10%)
	/// 
	/// Браконьер Петрович использует распространенный незаконный способ рыбалки с использованием рыболовной сети.
	/// Но проблема в том, что крупная рыба часто рвет сеть и приходится ее восстанавливать.
	/// Однажды Петрович задумался: какое максимальное количество повреждений может быть в рыболовной сети,
	/// таких, что сеть не будет разорвана на части? Вам предстоит помочь ему в вычислениях.
	///
	/// Сеть имеет прямоугольную форму размером M×N узлов, все смежные узлы соединены леской.
	/// Под разрывом будем понимать только единичный обрыв лески между двумя смежными узлами сети.
	///
	/// Например, если сеть имеет размер 2х2, то внешний вид сети будет напоминать квадрат,
	/// где допустим только один разрыв в одном из четырех возможных соединений, т.к. любые 2 разрыва приведут к разделению сети на 2 части.
	/// 
	/// Входные данные
	/// Первая строка входного файла INPUT.TXT содержит два целых числа M и N через пробел – размеры рыболовной сети (1 ≤ M, N ≤ 10 000).
	/// 
	/// Выходные данные
	/// В выходной файл OUTPUT.TXT выведите максимальное число разрывов заданной сети, которые не приведут к распадению рыболовной снасти Петровича.
	/// </summary>
	public static class Task0756
    {
        public static void Main()
        {            
            GetInputData(out var m, out var n);

            var result = Solve(m, n);

            PrintResult(result);  
        }

        private static void GetInputData(out int m, out int n)
        {
            var inputData = Console.ReadLine().Split();
            m = int.Parse(inputData[0]);
            n = int.Parse(inputData[1]);
		}

        public static int Solve(int m, int n)
        {
	        return (m - 1) * (n - 1);
        }

        private static void PrintResult(int result)
        {
            Console.WriteLine(result);
        }
    }
}